<div style="max-height: 20em; overflow: auto;">
        <p id="1.7.0">
        <b class="header">1.7.0</b> — <small><i>August 26, 2014</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.6.0...1.7.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.7.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            For consistency and speed across browsers, Underscore now ignores
            native array methods for <tt>forEach</tt>, <tt>map</tt>, <tt>reduce</tt>,
            <tt>reduceRight</tt>, <tt>filter</tt>, <tt>every</tt>, <tt>some</tt>,
            <tt>indexOf</tt>, and <tt>lastIndexOf</tt>. "Sparse" arrays are
            officially dead in Underscore.
          </li>
          <li>
            Added <tt>_.iteratee</tt> to customize the iterators used by collection
            functions. Many Underscore methods will take a string argument for easier
            <tt>_.property</tt>-style lookups, an object for <tt>_.where</tt>-style
            filtering, or a function as a custom callback.
          </li>
          <li>
            Added <tt>_.before</tt> as a counterpart to <tt>_.after</tt>.
          </li>
          <li>
            Added <tt>_.negate</tt> to invert the truth value of a passed-in
            predicate.
          </li>
          <li>
            Added <tt>_.noop</tt> as a handy empty placeholder function.
          </li>
          <li>
            <tt>_.isEmpty</tt> now works with <tt>arguments</tt> objects.
          </li>
          <li>
            <tt>_.has</tt> now guards against nullish objects.
          </li>
          <li>
            <tt>_.omit</tt> can now take an iteratee function.
          </li>
          <li>
            <tt>_.partition</tt> is now called with <tt>index</tt> and <tt>object</tt>.
          </li>
          <li>
            <tt>_.matches</tt> creates a shallow clone of your object and only iterates
            over own properties.
          </li>
          <li>
            Aligning better with the forthcoming ECMA6 <tt>Object.assign</tt>,
            <tt>_.extend</tt> only iterates over the object's own properties.
          </li>
          <li>
            Falsey guards are no longer needed in <tt>_.extend</tt> and
            <tt>_.defaults</tt>—if the passed in argument isn't a JavaScript
            object it's just returned.
          </li>
          <li>
            Fixed a few edge cases in <tt>_.max</tt> and <tt>_.min</tt> to
            handle arrays containing <tt>NaN</tt> (like strings or other objects)
            and <tt>Infinity</tt> and <tt>-Infinity</tt>.
          </li>
          <li>
            Override base methods like <tt>each</tt> and <tt>some</tt>
            and they'll be used internally by other Underscore functions too.
          </li>
          <li>
            The escape functions handle backticks (<tt>`</tt>), to deal with an
            IE = 8 bug.
          </li>
          <li>
            For consistency, <tt>_.union</tt> and <tt>_.difference</tt> now
            only work with arrays and not variadic args.
          </li>
          <li>
            <tt>_.memoize</tt> exposes the cache of memoized values as a property
            on the returned function.
          </li>
          <li>
            <tt>_.pick</tt> accepts <tt>iteratee</tt> and <tt>context</tt>
            arguments for a more advanced callback.
          </li>
          <li>
            Underscore templates no longer accept an initial <tt>data</tt> object.
            <tt>_.template</tt> always returns a function now.
          </li>
          <li>
            Optimizations and code cleanup aplenty.
          </li>
        </ul>
      <p></p>

      <p id="1.6.0">
        <b class="header">1.6.0</b> — <small><i>February 10, 2014</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.5.2...1.6.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.6.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            Underscore now registers itself for AMD (Require.js), Bower and Component,
            as well as being a CommonJS module and a regular (Java)Script.
            An ugliness, but perhaps a necessary one.
          </li>
          <li>
            Added <tt>_.partition</tt>, a way to split a collection into two lists
            of results — those that pass and those that fail a particular predicate.
          </li>
          <li>
            Added <tt>_.property</tt>, for easy creation of iterators that pull
            specific properties from objects. Useful in conjunction with other
            Underscore collection functions.
          </li>
          <li>
            Added <tt>_.matches</tt>, a function that will give you a predicate
            that can be used to tell if a given object matches a list of specified
            key/value properties.
          </li>
          <li>
            Added <tt>_.constant</tt>, as a higher-order <tt>_.identity</tt>.
          </li>
          <li>
            Added <tt>_.now</tt>, an optimized way to get a timestamp — used
            internally to speed up <tt>debounce</tt> and <tt>throttle</tt>.
          </li>
          <li>
            The <tt>_.partial</tt> function may now be used to partially apply
            any of its arguments, by passing <tt>_</tt> wherever you'd like a
            placeholder variable, to be filled-in later.
          </li>
          <li>
            The <tt>_.each</tt> function now returns a reference to the list for chaining.
          </li>
          <li>
            The <tt>_.keys</tt> function now returns an empty array for
            non-objects instead of throwing.
          </li>
          <li>
            … and more miscellaneous refactoring.
          </li>
        </ul>
      <p></p>

      <p id="1.5.2">
        <b class="header">1.5.2</b> — <small><i>September 7, 2013</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.5.1...1.5.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.5.2/index.html">Docs</a><br>
        </p><ul>
          <li>
            Added an <tt>indexBy</tt> function, which fits in alongside its
            cousins, <tt>countBy</tt> and <tt>groupBy</tt>.
          </li>
          <li>
            Added a <tt>sample</tt> function, for sampling random elements from
            arrays.
          </li>
          <li>
            Some optimizations relating to functions that can be implemented
            in terms of <tt>_.keys</tt> (which includes, significantly,
            <tt>each</tt> on objects). Also for <tt>debounce</tt> in a tight loop.
          </li>
        </ul>
      <p></p>

      <p id="1.5.1">
        <b class="header">1.5.1</b> — <small><i>July 8, 2013</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.5.0...1.5.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.5.1/index.html">Docs</a><br>
        </p><ul>
          <li>
            Removed <tt>unzip</tt>, as it's simply the application of <tt>zip</tt>
            to an array of arguments. Use <tt>_.zip.apply(_, list)</tt> to
            transpose instead.
          </li>
        </ul>
      <p></p>

      <p id="1.5.0">
        <b class="header">1.5.0</b> — <small><i>July 6, 2013</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.4.4...1.5.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.5.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            Added a new <tt>unzip</tt> function, as the inverse of <tt>_.zip</tt>.
          </li>
          <li>
            The <tt>throttle</tt> function now takes an <tt>options</tt> argument,
            allowing you to disable execution of the throttled function on either
            the <b>leading</b> or <b>trailing</b> edge.
          </li>
          <li>
            A source map is now supplied for easier debugging of the minified
            production build of Underscore.
          </li>
          <li>
            The <tt>defaults</tt> function now only overrides <tt>undefined</tt>
            values, not <tt>null</tt> ones.
          </li>
          <li>
            Removed the ability to call <tt>_.bindAll</tt> with no method name
            arguments. It's pretty much always wiser to white-list the names of
            the methods you'd like to bind.
          </li>
          <li>
            Removed the ability to call <tt>_.after</tt> with an invocation count
            of zero. The minimum number of calls is (naturally) now <tt>1</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.4.4">
        <b class="header">1.4.4</b> — <small><i>January 30, 2013</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.4.3...1.4.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.4.4/index.html">Docs</a><br>
        </p><ul>
          <li>
            Added <tt>_.findWhere</tt>, for finding the first element in a list
            that matches a particular set of keys and values.
          </li>
          <li>
            Added <tt>_.partial</tt>, for partially applying a function <i>without</i>
            changing its dynamic reference to <tt>this</tt>.
          </li>
          <li>
            Simplified <tt>bind</tt> by removing some edge cases involving
            constructor functions. In short: don't <tt>_.bind</tt> your
            constructors.
          </li>
          <li>
            A minor optimization to <tt>invoke</tt>.
          </li>
          <li>
            Fix bug in the minified version due to the minifier incorrectly
            optimizing-away <tt>isFunction</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.4.3">
        <b class="header">1.4.3</b> — <small><i>December 4, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.4.2...1.4.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.4.3/index.html">Docs</a><br>
        </p><ul>
          <li>
            Improved Underscore compatibility with Adobe's JS engine that can be
            used to script Illustrator, Photoshop, and friends.
          </li>
          <li>
            Added a default <tt>_.identity</tt> iterator to <tt>countBy</tt> and
            <tt>groupBy</tt>.
          </li>
          <li>
            The <tt>uniq</tt> function can now take <tt>array, iterator, context</tt>
            as the argument list.
          </li>
          <li>
            The <tt>times</tt> function now returns the mapped array of iterator
            results.
          </li>
          <li>
            Simplified and fixed bugs in <tt>throttle</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.4.2">
        <b class="header">1.4.2</b> — <small><i>October 6, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.4.1...1.4.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.4.2/index.html">Docs</a><br>
        </p><ul>
          <li>
            For backwards compatibility, returned to pre-1.4.0 behavior when
            passing <tt>null</tt> to iteration functions. They now become no-ops
            again.
          </li>
        </ul>
      <p></p>

      <p id="1.4.1">
        <b class="header">1.4.1</b> — <small><i>October 1, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.4.0...1.4.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.4.1/index.html">Docs</a><br>
        </p><ul>
          <li>
            Fixed a 1.4.0 regression in the <tt>lastIndexOf</tt> function.
          </li>
        </ul>
      <p></p>

      <p id="1.4.0">
        <b class="header">1.4.0</b> — <small><i>September 27, 2012</i></small>  — <a href="https://github.com/jashkenas/underscore/compare/1.3.3...1.4.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.4.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            Added a <tt>pairs</tt> function, for turning a JavaScript object
            into <tt>[key, value]</tt> pairs ... as well as an <tt>object</tt>
            function, for converting an array of <tt>[key, value]</tt> pairs
            into an object.
          </li>
          <li>
            Added a <tt>countBy</tt> function, for counting the number of objects
            in a list that match a certain criteria.
          </li>
          <li>
            Added an <tt>invert</tt> function, for performing a simple inversion
            of the keys and values in an object.
          </li>
          <li>
            Added a <tt>where</tt> function, for easy cases of filtering a list
            for objects with specific values.
          </li>
          <li>
            Added an <tt>omit</tt> function, for filtering an object to remove
            certain keys.
          </li>
          <li>
            Added a <tt>random</tt> function, to return a random number in a
            given range.
          </li>
          <li>
            <tt>_.debounce</tt>'d functions now return their last updated value,
            just like <tt>_.throttle</tt>'d functions do.
          </li>
          <li>
            The <tt>sortBy</tt> function now runs a stable sort algorithm.
          </li>
          <li>
            Added the optional <tt>fromIndex</tt> option to <tt>indexOf</tt> and
            <tt>lastIndexOf</tt>.
          </li>
          <li>
            "Sparse" arrays are no longer supported in Underscore iteration
            functions. Use a <tt>for</tt> loop instead (or better yet, an object).
          </li>
          <li>
            The <tt>min</tt> and <tt>max</tt> functions may now be called on
            <i>very</i> large arrays.
          </li>
          <li>
            Interpolation in templates now represents <tt>null</tt> and
            <tt>undefined</tt> as the empty string.
          </li>
          <li>
            <del>Underscore iteration functions no longer accept <tt>null</tt> values
            as a no-op argument. You'll get an early error instead.</del>
          </li>
          <li>
            A number of edge-cases fixes and tweaks, which you can spot in the
            <a href="https://github.com/jashkenas/underscore/compare/1.3.3...1.4.0">diff</a>.
            Depending on how you're using Underscore, <b>1.4.0</b> may be more
            backwards-incompatible than usual — please test when you upgrade.
          </li>
        </ul>
      <p></p>

      <p id="1.3.3">
        <b class="header">1.3.3</b> — <small><i>April 10, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.3.1...1.3.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.3.3/index.html">Docs</a><br>
        </p><ul>
          <li>
            Many improvements to <tt>_.template</tt>, which now provides the
            <tt>source</tt> of the template function as a property, for potentially
            even more efficient pre-compilation on the server-side. You may now
            also set the <tt>variable</tt> option when creating a template,
            which will cause your passed-in data to be made available under the
            variable you named, instead of using a <tt>with</tt> statement —
            significantly improving the speed of rendering the template.
          </li>
          <li>
            Added the <tt>pick</tt> function, which allows you to filter an
            object literal with a whitelist of allowed property names.
          </li>
          <li>
            Added the <tt>result</tt> function, for convenience when working
            with APIs that allow either functions or raw properties.
          </li>
          <li>
            Added the <tt>isFinite</tt> function, because sometimes knowing that
            a value is a number just ain't quite enough.
          </li>
          <li>
            The <tt>sortBy</tt> function may now also be passed the string name
            of a property to use as the sort order on each object.
          </li>
          <li>
            Fixed <tt>uniq</tt> to work with sparse arrays.
          </li>
          <li>
            The <tt>difference</tt> function now performs a shallow flatten
            instead of a deep one when computing array differences.
          </li>
          <li>
            The <tt>debounce</tt> function now takes an <tt>immediate</tt>
            parameter, which will cause the callback to fire on the leading
            instead of the trailing edge.
          </li>
        </ul>
      <p></p>

      <p id="1.3.1">
        <b class="header">1.3.1</b> — <small><i>January 23, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.3.0...1.3.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.3.1/index.html">Docs</a><br>
        </p><ul>
          <li>
            Added an <tt>_.has</tt> function, as a safer way to use <tt>hasOwnProperty</tt>.
          </li>
          <li>
            Added <tt>_.collect</tt> as an alias for <tt>_.map</tt>. Smalltalkers, rejoice.
          </li>
          <li>
            Reverted an old change so that <tt>_.extend</tt> will correctly copy
            over keys with undefined values again.
          </li>
          <li>
            Bugfix to stop escaping slashes within interpolations in <tt>_.template</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.3.0">
        <b class="header">1.3.0</b> — <small><i>January 11, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.2.4...1.3.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.3.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            Removed AMD (RequireJS) support from Underscore. If you'd like to use
            Underscore with RequireJS, you can load it as a normal script, wrap
            or patch your copy, or download a forked version.
          </li>
        </ul>
      <p></p>

      <p id="1.2.4">
        <b class="header">1.2.4</b> — <small><i>January 4, 2012</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.2.3...1.2.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.2.4/index.html">Docs</a><br>
        </p><ul>
          <li>
            You now can (and probably should, as it's simpler)
            write <tt>_.chain(list)</tt>
            instead of <tt>_(list).chain()</tt>.
          </li>
          <li>
            Fix for escaped characters in Underscore templates, and for supporting
            customizations of <tt>_.templateSettings</tt> that only define one or
            two of the required regexes.
          </li>
          <li>
            Fix for passing an array as the first argument to an <tt>_.wrap</tt>'d function.
          </li>
          <li>
            Improved compatibility with ClojureScript, which adds a <tt>call</tt>
            function to <tt>String.prototype</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.2.3">
        <b class="header">1.2.3</b> — <small><i>December 7, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.2.2...1.2.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.2.3/index.html">Docs</a><br>
        </p><ul>
          <li>
            Dynamic scope is now preserved for compiled <tt>_.template</tt> functions,
            so you can use the value of <tt>this</tt> if you like.
          </li>
          <li>
            Sparse array support of <tt>_.indexOf</tt>, <tt>_.lastIndexOf</tt>.
          </li>
          <li>
            Both <tt>_.reduce</tt> and <tt>_.reduceRight</tt> can now be passed an
            explicitly <tt>undefined</tt> value. (There's no reason why you'd
            want to do this.)
          </li>
        </ul>
      <p></p>

      <p id="1.2.2">
        <b class="header">1.2.2</b> — <small><i>November 14, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.2.1...1.2.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.2.1/index.html">Docs</a><br>
        </p><ul>
          <li>
            Continued tweaks to <tt>_.isEqual</tt> semantics. Now JS primitives are
            considered equivalent to their wrapped versions, and arrays are compared
            by their numeric properties only <small>(#351)</small>.
          </li>
          <li>
            <tt>_.escape</tt> no longer tries to be smart about not double-escaping
            already-escaped HTML entities. Now it just escapes regardless <small>(#350)</small>.
          </li>
          <li>
            In <tt>_.template</tt>, you may now leave semicolons out of evaluated
            statements if you wish: <tt>&lt;% }) %&gt;</tt> <small>(#369)</small>.
          </li>
          <li>
            <tt>_.after(callback, 0)</tt> will now trigger the callback immediately,
            making "after" easier to use with asynchronous APIs <small>(#366)</small>.
          </li>
        </ul>
      <p></p>

      <p id="1.2.1">
        <b class="header">1.2.1</b> — <small><i>October 24, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.2.0...1.2.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.2.1/index.html">Docs</a><br>
        </p><ul>
          <li>
            Several important bug fixes for <tt>_.isEqual</tt>, which should now
            do better on mutated Arrays, and on non-Array objects with
            <tt>length</tt> properties. <small>(#329)</small>
          </li>
          <li>
            <a href="https://github.com/jrburke">James Burke</a>
            contributed Underscore exporting for AMD module loaders, and
            <a href="https://github.com/tonylukasavage">Tony Lukasavage</a>
            for Appcelerator Titanium.
            <small>(#335, #338)</small>
          </li>
          <li>
            You can now <tt>_.groupBy(list, 'property')</tt> as a shortcut for
            grouping values by a particular common property.
          </li>
          <li>
            <tt>_.throttle</tt>'d functions now fire immediately upon invocation,
            and are rate-limited thereafter <small>(#170, #266)</small>.
          </li>
          <li>
            Most of the <tt>_.is[Type]</tt> checks no longer ducktype.
          </li>
          <li>
            The <tt>_.bind</tt> function now also works on constructors, a-la
            ES5 ... but you would never want to use <tt>_.bind</tt> on a
            constructor function.
          </li>
          <li>
            <tt>_.clone</tt> no longer wraps non-object types in Objects.
          </li>
          <li>
            <tt>_.find</tt> and <tt>_.filter</tt> are now the preferred names for
            <tt>_.detect</tt> and <tt>_.select</tt>.
          </li>
        </ul>
      <p></p>

      <p id="1.2.0">
        <b class="header">1.2.0</b> — <small><i>October 5, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.7...1.2.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.2.0/index.html">Docs</a><br>
        </p><ul>
          <li>
            The <tt>_.isEqual</tt> function now
            supports true deep equality comparisons, with checks for cyclic structures,
            thanks to Kit Cambridge.
          </li>
          <li>
            Underscore templates now support HTML escaping interpolations, using
            <tt>&lt;%- ... %&gt;</tt> syntax.
          </li>
          <li>
            Ryan Tenney contributed <tt>_.shuffle</tt>, which uses a modified
            Fisher-Yates to give you a shuffled copy of an array.
          </li>
          <li>
            <tt>_.uniq</tt> can now be passed an optional iterator, to determine by
            what criteria an object should be considered unique.
          </li>
          <li>
            <tt>_.last</tt> now takes an optional argument which will return the last
            N elements of the list.
          </li>
          <li>
            A new <tt>_.initial</tt> function was added, as a mirror of <tt>_.rest</tt>,
            which returns all the initial values of a list (except the last N).
          </li>
        </ul>
      <p></p>

      <p id="1.1.7">
        <b class="header">1.1.7</b> — <small><i>July 13, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.6...1.1.7">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.7/index.html">Docs</a><br>
        Added <tt>_.groupBy</tt>, which aggregates a collection into groups of like items.
        Added <tt>_.union</tt> and <tt>_.difference</tt>, to complement the
        (re-named) <tt>_.intersection</tt>.
        Various improvements for support of sparse arrays.
        <tt>_.toArray</tt> now returns a clone, if directly passed an array.
        <tt>_.functions</tt> now also returns the names of functions that are present
        in the prototype chain.
      </p>

      <p id="1.1.6">
        <b class="header">1.1.6</b> — <small><i>April 18, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.5...1.1.6">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.6/index.html">Docs</a><br>
        Added <tt>_.after</tt>, which will return a function that only runs after
        first being called a specified number of times.
        <tt>_.invoke</tt> can now take a direct function reference.
        <tt>_.every</tt> now requires an iterator function to be passed, which
        mirrors the ECMA5 API.
        <tt>_.extend</tt> no longer copies keys when the value is undefined.
        <tt>_.bind</tt> now errors when trying to bind an undefined value.
      </p>

      <p id="1.1.5">
        <b class="header">1.1.5</b> — <small><i>March 20, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.4...1.1.5">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.5/index.html">Docs</a><br>
        Added an <tt>_.defaults</tt> function, for use merging together JS objects
        representing default options.
        Added an <tt>_.once</tt> function, for manufacturing functions that should
        only ever execute a single time.
        <tt>_.bind</tt> now delegates to the native ECMAScript 5 version,
        where available.
        <tt>_.keys</tt> now throws an error when used on non-Object values, as in
        ECMAScript 5.
        Fixed a bug with <tt>_.keys</tt> when used over sparse arrays.
      </p>

      <p id="1.1.4">
        <b class="header">1.1.4</b> — <small><i>January 9, 2011</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.3...1.1.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.4/index.html">Docs</a><br>
        Improved compliance with ES5's Array methods when passing <tt>null</tt>
        as a value. <tt>_.wrap</tt> now correctly sets <tt>this</tt> for the
        wrapped function. <tt>_.indexOf</tt> now takes an optional flag for
        finding the insertion index in an array that is guaranteed to already
        be sorted. Avoiding the use of <tt>.callee</tt>, to allow <tt>_.isArray</tt>
        to work properly in ES5's strict mode.
      </p>

      <p id="1.1.3">
        <b class="header">1.1.3</b> — <small><i>December 1, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.2...1.1.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.3/index.html">Docs</a><br>
        In CommonJS, Underscore may now be required with just: <br>
        <tt>var _ = require("underscore")</tt>.
        Added <tt>_.throttle</tt> and <tt>_.debounce</tt> functions.
        Removed <tt>_.breakLoop</tt>, in favor of an ECMA5-style un-<i>break</i>-able
        each implementation — this removes the try/catch, and you'll now have
        better stack traces for exceptions that are thrown within an Underscore iterator.
        Improved the <b>isType</b> family of functions for better interoperability
        with Internet Explorer host objects.
        <tt>_.template</tt> now correctly escapes backslashes in templates.
        Improved <tt>_.reduce</tt> compatibility with the ECMA5 version:
        if you don't pass an initial value, the first item in the collection is used.
        <tt>_.each</tt> no longer returns the iterated collection, for improved
        consistency with ES5's <tt>forEach</tt>.
      </p>

      <p id="1.1.2">
        <b class="header">1.1.2</b> — <small><i>October 15, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.1...1.1.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.2/index.html">Docs</a><br>
        Fixed <tt>_.contains</tt>, which was mistakenly pointing at
        <tt>_.intersect</tt> instead of <tt>_.include</tt>, like it should
        have been. Added <tt>_.unique</tt> as an alias for <tt>_.uniq</tt>.
      </p>

      <p id="1.1.1">
        <b class="header">1.1.1</b> — <small><i>October 5, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.1.0...1.1.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.1/index.html">Docs</a><br>
        Improved the speed of <tt>_.template</tt>, and its handling of multiline
        interpolations. Ryan Tenney contributed optimizations to many Underscore
        functions. An annotated version of the source code is now available.
      </p>

      <p id="1.1.0">
        <b class="header">1.1.0</b> — <small><i>August 18, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.0.4...1.1.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.1.0/index.html">Docs</a><br>
        The method signature of <tt>_.reduce</tt> has been changed to match
        the ECMAScript 5 signature, instead of the Ruby/Prototype.js version.
        This is a backwards-incompatible change. <tt>_.template</tt> may now be
        called with no arguments, and preserves whitespace. <tt>_.contains</tt>
        is a new alias for <tt>_.include</tt>.
      </p>

      <p id="1.0.4">
        <b class="header">1.0.4</b> — <small><i>June 22, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.0.3...1.0.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.0.4/index.html">Docs</a><br>
        <a href="http://themoell.com/">Andri Möll</a> contributed the <tt>_.memoize</tt>
        function, which can be used to speed up expensive repeated computations
        by caching the results.
      </p>

      <p id="1.0.3">
        <b class="header">1.0.3</b> — <small><i>June 14, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.0.2...1.0.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.0.3/index.html">Docs</a><br>
        Patch that makes <tt>_.isEqual</tt> return <tt>false</tt> if any property
        of the compared object has a <tt>NaN</tt> value. Technically the correct
        thing to do, but of questionable semantics. Watch out for NaN comparisons.
      </p>

      <p id="1.0.2">
        <b class="header">1.0.2</b> — <small><i>March 23, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.0.1...1.0.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.0.2/index.html">Docs</a><br>
        Fixes <tt>_.isArguments</tt> in recent versions of Opera, which have
        arguments objects as real Arrays.
      </p>

      <p id="1.0.1">
        <b class="header">1.0.1</b> — <small><i>March 19, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/1.0.0...1.0.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.0.1/index.html">Docs</a><br>
        Bugfix for <tt>_.isEqual</tt>, when comparing two objects with the same
        number of undefined keys, but with different names.
      </p>

      <p id="1.0.0">
        <b class="header">1.0.0</b> — <small><i>March 18, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.6.0...1.0.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/1.0.0/index.html">Docs</a><br>
        Things have been stable for many months now, so Underscore is now
        considered to be out of beta, at <b>1.0</b>. Improvements since <b>0.6</b>
        include <tt>_.isBoolean</tt>, and the ability to have <tt>_.extend</tt>
        take multiple source objects.
      </p>

      <p id="0.6.0">
        <b class="header">0.6.0</b> — <small><i>February 24, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.8...0.6.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.6.0/index.html">Docs</a><br>
        Major release. Incorporates a number of
        <a href="https://github.com/ratbeard">Mile Frawley's</a> refactors for
        safer duck-typing on collection functions, and cleaner internals. A new
        <tt>_.mixin</tt> method that allows you to extend Underscore with utility
        functions of your own. Added <tt>_.times</tt>, which works the same as in
        Ruby or Prototype.js. Native support for ECMAScript 5's <tt>Array.isArray</tt>,
        and <tt>Object.keys</tt>.
      </p>

      <p id="0.5.8">
        <b class="header">0.5.8</b> — <small><i>January 28, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.7...0.5.8">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.8/index.html">Docs</a><br>
        Fixed Underscore's collection functions to work on
        <a href="https://developer.mozilla.org/En/DOM/NodeList">NodeLists</a> and
        <a href="https://developer.mozilla.org/En/DOM/HTMLCollection">HTMLCollections</a>
        once more, thanks to
        <a href="https://github.com/JustinTulloss">Justin Tulloss</a>.
      </p>

      <p id="0.5.7">
        <b class="header">0.5.7</b> — <small><i>January 20, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.6...0.5.7">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.7/index.html">Docs</a><br>
        A safer implementation of <tt>_.isArguments</tt>, and a
        faster <tt>_.isNumber</tt>,<br>thanks to
        <a href="http://jedschmidt.com/">Jed Schmidt</a>.
      </p>

      <p id="0.5.6">
        <b class="header">0.5.6</b> — <small><i>January 18, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.5...0.5.6">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.6/index.html">Docs</a><br>
        Customizable delimiters for <tt>_.template</tt>, contributed by
        <a href="https://github.com/iamnoah">Noah Sloan</a>.
      </p>

      <p id="0.5.5">
        <b class="header">0.5.5</b> — <small><i>January 9, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.4...0.5.5">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.5/index.html">Docs</a><br>
        Fix for a bug in MobileSafari's OOP-wrapper, with the arguments object.
      </p>

      <p id="0.5.4">
        <b class="header">0.5.4</b> — <small><i>January 5, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.2...0.5.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.4/index.html">Docs</a><br>
        Fix for multiple single quotes within a template string for
        <tt>_.template</tt>. See:
        <a href="http://www.west-wind.com/Weblog/posts/509108.aspx">Rick Strahl's blog post</a>.
      </p>

      <p id="0.5.2">
        <b class="header">0.5.2</b> — <small><i>January 1, 2010</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.1...0.5.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.2/index.html">Docs</a><br>
        New implementations of <tt>isArray</tt>, <tt>isDate</tt>, <tt>isFunction</tt>,
        <tt>isNumber</tt>, <tt>isRegExp</tt>, and <tt>isString</tt>, thanks to
        a suggestion from
        <a href="http://www.broofa.com/">Robert Kieffer</a>.
        Instead of doing <tt>Object#toString</tt>
        comparisons, they now check for expected properties, which is less safe,
        but more than an order of magnitude faster. Most other Underscore
        functions saw minor speed improvements as a result.
        <a href="http://dolzhenko.org/">Evgeniy Dolzhenko</a>
        contributed <tt>_.tap</tt>,
        <a href="http://ruby-doc.org/core-1.9/classes/Object.html#M000191">similar to Ruby 1.9's</a>,
        which is handy for injecting side effects (like logging) into chained calls.
      </p>

      <p id="0.5.1">
        <b class="header">0.5.1</b> — <small><i>December 9, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.5.0...0.5.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.1/index.html">Docs</a><br>
        Added an <tt>_.isArguments</tt> function. Lots of little safety checks
        and optimizations contributed by
        <a href="https://github.com/iamnoah">Noah Sloan</a> and
        <a href="http://themoell.com/">Andri Möll</a>.
      </p>

      <p id="0.5.0">
        <b class="header">0.5.0</b> — <small><i>December 7, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.7...0.5.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.5.0/index.html">Docs</a><br>
        <b>[API Changes]</b> <tt>_.bindAll</tt> now takes the context object as
        its first parameter. If no method names are passed, all of the context
        object's methods are bound to it, enabling chaining and easier binding.
        <tt>_.functions</tt> now takes a single argument and returns the names
        of its Function properties. Calling <tt>_.functions(_)</tt> will get you
        the previous behavior.
        Added <tt>_.isRegExp</tt> so that <tt>isEqual</tt> can now test for RegExp equality.
        All of the "is" functions have been shrunk down into a single definition.
        <a href="https://github.com/grayrest">Karl Guertin</a> contributed patches.
      </p>

      <p id="0.4.7">
        <b class="header">0.4.7</b> — <small><i>December 6, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.6...0.4.7">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.7/index.html">Docs</a><br>
        Added <tt>isDate</tt>, <tt>isNaN</tt>, and <tt>isNull</tt>, for completeness.
        Optimizations for <tt>isEqual</tt> when checking equality between Arrays
        or Dates. <tt>_.keys</tt> is now <small><i><b>25%–2X</b></i></small> faster (depending on your
        browser) which speeds up the functions that rely on it, such as <tt>_.each</tt>.
      </p>

      <p id="0.4.6">
        <b class="header">0.4.6</b> — <small><i>November 30, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.5...0.4.6">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.6/index.html">Docs</a><br>
        Added the <tt>range</tt> function, a port of the
        <a href="http://docs.python.org/library/functions.html#range">Python
        function of the same name</a>, for generating flexibly-numbered lists
        of integers. Original patch contributed by
        <a href="https://github.com/kylichuku">Kirill Ishanov</a>.
      </p>

      <p id="0.4.5">
        <b class="header">0.4.5</b> — <small><i>November 19, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.4...0.4.5">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.5/index.html">Docs</a><br>
        Added <tt>rest</tt> for Arrays and arguments objects, and aliased
        <tt>first</tt> as <tt>head</tt>, and <tt>rest</tt> as <tt>tail</tt>,
        thanks to <a href="https://github.com/lukesutton">Luke Sutton</a>'s patches.
        Added tests ensuring that all Underscore Array functions also work on
        <i>arguments</i> objects.
      </p>

      <p id="0.4.4">
        <b class="header">0.4.4</b> — <small><i>November 18, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.3...0.4.4">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.4/index.html">Docs</a><br>
        Added <tt>isString</tt>, and <tt>isNumber</tt>, for consistency. Fixed
        <tt>_.isEqual(NaN, NaN)</tt> to return <i>true</i> (which is debatable).
      </p>

      <p id="0.4.3">
        <b class="header">0.4.3</b> — <small><i>November 9, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.2...0.4.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.3/index.html">Docs</a><br>
        Started using the native <tt>StopIteration</tt> object in browsers that support it.
        Fixed Underscore setup for CommonJS environments.
      </p>

      <p id="0.4.2">
        <b class="header">0.4.2</b> — <small><i>November 9, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.1...0.4.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.2/index.html">Docs</a><br>
        Renamed the unwrapping function to <tt>value</tt>, for clarity.
      </p>

      <p id="0.4.1">
        <b class="header">0.4.1</b> — <small><i>November 8, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.4.0...0.4.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.1/index.html">Docs</a><br>
        Chained Underscore objects now support the Array prototype methods, so
        that you can perform the full range of operations on a wrapped array
        without having to break your chain. Added a <tt>breakLoop</tt> method
        to <b>break</b> in the middle of any Underscore iteration. Added an
        <tt>isEmpty</tt> function that works on arrays and objects.
      </p>

      <p id="0.4.0">
        <b class="header">0.4.0</b> — <small><i>November 7, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.3.3...0.4.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.4.0/index.html">Docs</a><br>
        All Underscore functions can now be called in an object-oriented style,
        like so: <tt>_([1, 2, 3]).map(...);</tt>. Original patch provided by
        <a href="http://macournoyer.com/">Marc-André Cournoyer</a>.
        Wrapped objects can be chained through multiple
        method invocations. A <a href="#object-functions"><tt>functions</tt></a> method
        was added, providing a sorted list of all the functions in Underscore.
      </p>

      <p id="0.3.3">
        <b class="header">0.3.3</b> — <small><i>October 31, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.3.2...0.3.3">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.3.3/index.html">Docs</a><br>
        Added the JavaScript 1.8 function <tt>reduceRight</tt>. Aliased it
        as <tt>foldr</tt>, and aliased <tt>reduce</tt> as <tt>foldl</tt>.
      </p>

      <p id="0.3.2">
        <b class="header">0.3.2</b> — <small><i>October 29, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.3.1...0.3.2">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.3.2/index.html">Docs</a><br>
        Now runs on stock <a href="http://www.mozilla.org/rhino/">Rhino</a>
        interpreters with: <tt>load("underscore.js")</tt>.
        Added <a href="#identity"><tt>identity</tt></a> as a utility function.
      </p>

      <p id="0.3.1">
        <b class="header">0.3.1</b> — <small><i>October 29, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.3.0...0.3.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.3.1/index.html">Docs</a><br>
        All iterators are now passed in the original collection as their third
        argument, the same as JavaScript 1.6's <b>forEach</b>. Iterating over
        objects is now called with <tt>(value, key, collection)</tt>, for details
        see <a href="#each"><tt>_.each</tt></a>.
      </p>

      <p id="0.3.0">
        <b class="header">0.3.0</b> — <small><i>October 29, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.2.0...0.3.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.3.0/index.html">Docs</a><br>
        Added <a href="https://github.com/DmitryBaranovskiy">Dmitry Baranovskiy</a>'s
        comprehensive optimizations, merged in
        <a href="https://github.com/kriskowal">Kris Kowal</a>'s patches to make Underscore
        <a href="http://wiki.commonjs.org/wiki/CommonJS">CommonJS</a> and
        <a href="http://narwhaljs.org/">Narwhal</a> compliant.
      </p>

      <p id="0.2.0">
        <b class="header">0.2.0</b> — <small><i>October 28, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.1.1...0.2.0">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.2.0/index.html">Docs</a><br>
        Added <tt>compose</tt> and <tt>lastIndexOf</tt>, renamed <tt>inject</tt> to
        <tt>reduce</tt>, added aliases for <tt>inject</tt>, <tt>filter</tt>,
        <tt>every</tt>, <tt>some</tt>, and <tt>forEach</tt>.
      </p>

      <p id="0.1.1">
        <b class="header">0.1.1</b> — <small><i>October 28, 2009</i></small> — <a href="https://github.com/jashkenas/underscore/compare/0.1.0...0.1.1">Diff</a> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.1.1/index.html">Docs</a><br>
        Added <tt>noConflict</tt>, so that the "Underscore" object can be assigned to
        other variables.
      </p>

      <p id="0.1.0">
        <b class="header">0.1.0</b> — <small><i>October 28, 2009</i></small> — <a href="https://cdn.rawgit.com/jashkenas/underscore/0.1.1/index.html">Docs</a><br>
        Initial release of Underscore.js.
      </p>
</div>